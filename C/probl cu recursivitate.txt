Problema recursivitate 1
#include<stdio.h>
int suma(int n)
{
 if (n==0) return 0;
 else return (n%10)+suma(n/10);
}
void main(void)
{
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("%d",suma(n));
}

Problema recursivitate 2
#include<stdio.h>
int s_par(int n)
{
 if (n==0) return 0;
 else if (n%2==0) return (n%10)+s_par(n/10);
      else return s_par(n/10);
}
void main(void)
{
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("%d",s_par(n));
}

Problema recursivitate 4
#include<stdio.h>
#include<conio.h>
int nr_imp(int n)
{
 if (n==0) return 0;
 else if (n%2!=0) return 1 + nr_imp(n/10);
      else return nr_imp(n/10);
}
void main(void)
{
 clrscr();
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("%d",nr_imp(n));
}
Problema recursivitate 5
#include<stdio.h>
#include<conio.h>
int max(int a, int b)
{
 if (a>b) return a;
 else return b;
}
int max_cif(int n)
{
 if(n<10) return n;
 else return max(n%10, max_cif(n/10));
}
void main(void)
{
 clrscr();
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("%d",max_cif(n));
}
Problema recursivitate 6
#include<stdio.h>
#include<conio.h>
int divi3(int n)
{
 if (n==0) return 1;
 else if (n%3==0) return n%10 * divi3(n/10);
      else return divi3(n/10);
 }
void main(void)
{
 clrscr();
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("%d",divi3(n));
}
Problema recursivitate 7
#include<stdio.h>
#include<conio.h>
int suma_divi(int n, int i)
{
 if(i==n) return n;
 else if(n%i==0) return i + suma_divi(n,i+1);
      else return suma_divi(n,i+1);
}
void main(void)
{
 int n;
 printf("dati nr: ");
 scanf("%d",&n);
 printf("suma divizorilor lui %d este %d ",n,suma_divi(n,1));
}

Problema recursivitate 8
#include<stdio.h>
#include<conio.h>
int pari(int n, int i)
{
 if(i>n) return 0;
 else if((n%i==0)&&(i%2==0)) { printf("divizor par: %d\n",i);
			       return 1 + pari(n,i+1); }
      else return pari(n,i+1);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("numarul de divizori pari a lui %d este %d ",n,pari(n,1));
}
Problema recursivitate 9
#include<stdio.h>
#include<conio.h>
int nr_prop(int n, int i)
{
 if (i>=n) return 0;
 else if (n%i==0) return 1 + nr_prop(n,i+1);
      else return  nr_prop(n,i+1);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("numarul de divizori proprii a lui %d este %d",n,nr_prop(n,2));
}

Problema recursivitate 10
#include<stdio.h>
#include<conio.h>
int suma_patr(int n)
{
 if(n==0) return 0;
 else return (n%10)*(n%10)+ suma_patr(n/10);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("suma patratelor cifrelor lui %d este %d",n,suma_patr(n));
}
Problema recursivitate 11
#include<stdio.h>
#include<conio.h>
int min(int a, int b)
{
 if (a<b) return a;
 else return b;
}
int cif_pmin(int n)
{
 if(n<10) if(n%2==0) return n;
	  else return 1;
 else if((n%10)%2==0) return min(n%10, cif_pmin(n/10));
      else cif_pmin(n/10);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("cifra minima para din %d este %d ",n,cif_pmin(n));
}
Problema recursivitate 12
#include<stdio.h>
#include<conio.h>
int baza (int n, int b)
{
 if(n==0) return 0;
 else return (n%b)+10*baza(n/b,b);
}
void main(void)
{
 int n, b;
 clrscr();
 printf("dati nr: \n");
 scanf("%d",&n);
 printf("dati baza: \n");
 scanf("%d",&b);
 printf("numarul %d in baza %d este %d",n,b,baza(n,b));
}
Problema recursivitate 13
#include<stdio.h>
#include<conio.h>
int baza10(int n, int b)
{
 if (n==0) return 0;
 else return (n%10)+b*baza10(n/10,b);
}
void main(void)
{
 int n,b;
 clrscr();
 printf("dati nr: \n");
 scanf("%d",&n);
 printf("dati baza: \n");
 scanf("%d",&b);
 printf("numarul %d in baza %d in baza 10 va fi: %d",n,b,baza10(n,b));
}

Problema recursivitate 14
#include<stdio.h>
#include<conio.h>
#include<math.h>
int suma_pcif(int x)
{
 if(x<10) if(x%2==0) return x;
	  else return 0;
 else if((x%10)%2==0)return (x%10) + suma_pcif(x/10);
      else return suma_pcif(x/10);
}
int prop(int x, int j)
{
 if(j>=x) return 0;
 else if(x%j==0) return 1 + prop(x,j+1);
      else return prop(x,j+1);
}
int prim(int x, int i)
{
 if (i>sqrt(x)) return 1;
 else if(x%i==0) return 0;
      else return prim(x,i+1);
}
int cmmdc(int x, int y)
{
 if(x==y) return x;
 else if(x>y) return cmmdc(x-y,y);
      else return cmmdc(x,y-x);
}
int nu(int x)
{
 if(x==0) return 0;
 else if((x%10)%2!=0) return nu(x/10)*10+x%10;
      else return nu(x/10);
}

void main(void)
{
 int a[50], i, n, m;
 clrscr();
 printf("dati dimensiunea sirului: ");
 scanf("%d",&n);
 for(i=0;i<n;i++) { printf("a[%d]= ",i);
		    scanf("%d",a+i); }
 printf("suma cifrelor pare pt fiecare elem: ");
 for(i=0;i<n;i++) printf("%d ",suma_pcif(a[i]));
 printf("\n");
 printf("nrumarul de divizori pari a fiecarui elem: ");
 for(i=0;i<n; i++) printf("%d ",prop(a[i],2));
 printf("\n");
 printf("pozitiile din sir care detin elem prime: ");
 for(i=0;i<n;i++) if(prim(a[i],2)==1) printf("%d ",i);
 printf("\n");
 printf("cmmdc-ul elem din sir: ");
 m=cmmdc(a[0],a[1]);
 for(i=2;i<n;i++) m=cmmdc(m,a[i]);
 printf("%d ",m);
 printf("\n");
 printf("elem din sir fara cifrele pare: ");
 for(i=0;i<n;i++) printf("%d ",nu(a[i]));
}
Problema recursivitate 15
#include<stdio.h>
#include<conio.h>
int a[50], n;
int suma(int n)
{
 if(n==-1) return 0;
 else return a[n]+suma(n-1);
}
int nr_imp(int n)
{
 if(n==-1) return 0;
 else if(a[n]%2!=0) return 1+nr_imp(n-1);
      else return nr_imp(n-1);
}
int prod(int n)
{
 if(n==-1) return 1;
 else if(a[n]%2==0) return a[n] * prod(n-1);
      else return prod(n-1);
}
int min(int a, int b)
{
 if(a<=b) return a;
 else return b;
}
void main(void)
{
 int i,m;
 clrscr();
 printf("dati dimenisunea sirului: ");
 scanf("%d",&n);
 for(i=0;i<n;i++) { printf("a[%d]= ",i);
		    scanf("%d",a+i); }
 printf("suma elem sirului: %d\n",suma(n));
 printf("nr elem imp din sir: %d\n",nr_imp(n));
 printf("produsul elem pare din sir: %d\n",prod(n));
 m=a[0];
 for(i=1;i<n;i++) m=min(m,a[i]);
 printf("minimul din sir: %d\n",m);
}


Problema recursivitate 16
#include<stdio.h>
#include<conio.h>
int a[50], n;
int prod(int n)
{
 if(n==-1) return 1;
 else if((a[n]>0)&&(a[n]%2!=0)) return a[n]*prod(n-1);
      else return prod(n-1);
}
int pozitii(int n)
{
 if(n<=-1) return 0;
 else if((n%2!=0)&&(a[n]>=0)) return 1 + pozitii(n-1);
      else return pozitii(n-1);
}
int exista(int n)
{
 if (n==-1) return 0;
 else if(a[n]==0) return 1;
      else return exista(n-1);
}
int val (int n, int x)
{
 if(n==-1) return 0;
 else if(a[n]==x) return n;
      else return val(n-1,x);
}
void main(void)
{
 int i,x;
 clrscr();
 printf("dati dimensiunea sirului: ");
 scanf("%d",&n);
 for(i=0;i<n;i++) { printf("a[%d]= ",i);
		    scanf("%d",a+i); }
 printf("produsul elementelor pozitive si impare: %d\n",prod(n));
 printf("numarul elementelor pozitive de pe pozitiile impare din sir: %d\n",pozitii(n));
 if(exista(n)==1) printf("exista cel putin un elem nul in sir \n");
 else printf("nu exista nici un elem nul in sir \n");
 printf("dati o valoare: ");
 scanf("%d",&x);
 printf("pozitia pe care se afla %d: %d\n",x,val(n,x));
}
Problema recursivitate 17
#include<stdio.h>
#include<conio.h>
int suma(int n)
{
 if(n==0) return 0;
 else if((n%10)%3==0) return (n%10) + suma(n/10);
      else return suma(n/10);
}
int mic3(int n)
{
 if(n==0) return 0;
 else if((n%10)<3) return 1+ mic3(n/10);
      else return mic3(n/10);
}
int prod(int n)
{
 if(n==0) return 1;
 else if((n%10)%2!=0) return n%10 * prod(n/10);
      else return prod(n/10);
}
int elimin(int n)
{
 if(n==0) return 0;
 else if (n%10==5) return elimin(n/10);
      else return n%10 + 10 * elimin(n/10);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("suma cifrelor lui %d divizibile cu 3 este: %d\n",n,suma(n));
 printf("numarul cifrelor mai mici ca 3 din %d este: %d\n",n,mic3(n));
 printf("produsul cifrelor imparele a lui %d este: %d\n",n,prod(n));
 printf("dupa eliminarea cifrei 5 din %d este: %d",n,elimin(n));
}

Problema recursivitate 18
#include<stdio.h>
#include<conio.h>
int rasturnat(int n)
{
 if(n<10) return n;
 else return (n%10) * 10 + rasturnat(n/10);
}
int palindrom(int n)
{
 if(n<10) return 1;
 else if(rasturnat(n)!=n) return 0;
      else return 1;
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("rasturnatul lui %d este: %d\n",n,rasturnat(n));
 if(palindrom(n)==1) printf("numarul %d este palindrom \n",n);
 else printf("numarul %d nu este palindrom \n",n);
}
Problema recursivitate 19
#include<stdio.h>
#include<conio.h>
int fibo1(int n)
{
 if(n<=2) return 1;
 else return fibo1(n-1)+fibo1(n-2);
}
int fibo2(int n, int a, int b)
{
 if(n==1) return a;
 else return fibo2(n-1, a+b, b);
}
void main(void)
{
 int n;
 clrscr();
 printf("dati nr: ");
 scanf("%d",&n);
 printf("al %d nr din sirul fibonaci: %d\n",n,fibo1(n));
 printf("%d",fibo2(n,1,1));
}
Problema recursivitate 20
#include<stdio.h>
#include<conio.h>
int prod(int a, int b) //a*b prin adunari repetate
{
 if(b==0) return 0;
 else return a + prod(a,b-1);
}
int suma(int n) // 1+11+111+1111+...+111111111
{
 if(n==0) return 0;
 else return suma(n-1)*10+n;
}
int putere(int n) // 2 la puterea n
{
 if(n==0) return 1;
 else return 2*putere(n-1);
}
void main(void)
{
 int a, b, n;
 clrscr();
 printf("dati nr1: ");
 scanf("%d",&a);
 printf("dati nr2: ");
 scanf("%d",&b);
 printf("%d * %d = %d\n",a,b,prod(a,b));
 printf("dati nr de termeni pt suma: ");
 scanf("%d",&n);
 printf("suma este: %d\n",suma(n));
 printf("2 la puterea %d este: %d",n,putere(n));

}

Recursivitate 2 la o putere
#include<stdio.h>
#include<conio.h>
int prod(int a, int b) //a*b prin adunari repetate
{
 if(b==0) return 0;
 else return a + prod(a,b-1);
}
int suma(int n) // 1+11+111+1111+...+111111111
{
 if(n==0) return 0;
 else return suma(n-1)*10+n;
}
int putere(int n) // 2 la puterea n
{
 if(n==0) return 1;
 else return 2*putere(n-1);
}
void main(void)
{
 int a, b, n;
 clrscr();
 printf("dati nr1: ");
 scanf("%d",&a);
 printf("dati nr2: ");
 scanf("%d",&b);
 printf("%d * %d = %d\n",a,b,prod(a,b));
 printf("dati nr de termeni pt suma: ");
 scanf("%d",&n);
 printf("suma este: %d\n",suma(n));
 printf("2 la puterea %d este: %d",n,putere(n));

}